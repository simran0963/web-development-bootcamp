                                                                         WHAT IS CSS?



  CSS stands for "Cascading Stylesheets"
    1. not a programming language.
    2. Stylesheet/ Styling language.
    3. Used for website layout and design.
    4. By default CSS do not have any logic so it is used with HTML, XML, XHTML or can be extended with Sass/Less.
      -> Sass: Syntactically Awesome Sytlesheet and
      -> Less: Leaner CSS are CSS preprocessors

INLINE CSS: relate to a speific HTML tag to style a particular page element.
	    less flexible as each inline style that is created must be edited separately while a change in design.

  The first CSS element to learn is the style attribute which is kept under the body tag and is followed by : ="background-color: colour;" for 
  changing the bg colour of the website.It is used as:
    1. <body style="background-color: blue;"> when using the keyword values.
    2. <body style="background-color: #bbff00;"> for the hexadecimal values.
    3. <body style="background-color: rgb(255, 255, 128);"> when using the RGB values.
    4. <body style="background-color: hsl(50, 33%, 25%);"> when using the HSL values.
    5. <body style="background-color: currentcolor;"> when using the special keyword values.
    6. <body style="background-color: inherit;"> when using theGlobal values.

INTERNAL CSS: holds CSS rules for page in the head section of the HTML file.
	      rules only apply to that particular page but you can arrange CSS classes and ID's to style multiple elements in the page code.

  Again style is used but as a tag and within the head tag after the closing title tag.
  so within the style tag an element body is specified using CSS code as which affects the style of the body element as:
    1. <style>
        body {
	      background-color= "#bbff00"
      }
    </style>
    2. similarly other elements like img could also be used as tags and modified by using attributes such as bg color, border, height, etc..

EXTERNAL CSS: With an external style sheet, you can change the look of an entire website by changing just one file!

  Each HTML page must include a reference to the external style sheet file inside the <link> element, inside the head section.
  An external style sheet can be written in any text editor, and must be saved with a .css extension.

  The external .css file should not contain any HTML tags.

  Here is how the "mystyle.css" file looks:
    1. "mystyle.css"
      body {
        background-color: lightblue;
      }

      h1 {
        color: navy;
        margin-left: 20px;
      }
    Note: Do not add a space between the property value and the unit (such as margin-left: 20 px;). The correct way is: margin-left: 20px

NOTE*: if we specify css rules for the same property in different places, the inline css is prioritized over the internal and external css, 
       also internal css is given more priority iver the external css.
       it is usually suggested to implement all the styles inside the external css.

COMMENTING IN CSS:
	1. To comment out a particular text or code in css just put them under a /* in the beginning and a */ in the end as:
		 /*
		 img {
			 background-color: red;
		 }
		 */

USE CLASS SELECTORS INSTEAD OF TAG SELECTORS:
	1. When using the external css, if a tag is used to specify a particular property, then another tag within the same website, specifying a 
	   different data gets the same styling too. In order to change it simply add a class attribute to both the tags with different class 
		 name ofc and to add properties instead of using the tag name use a .name-of-class and within {} add the properties to be applied to either
		 or all the classes separately as:
		<img class="bacon" src="link to bacon" alt="bacon-img">	
		<img class="broccoli" src="link to broccoli" alt="broccoli-img">

			.bacon {
					background-color: green;
				}

			.broccoli {
					background-color: red;
				}

NOTE*:	CLASS ATTRIBUTE ALLOWS US TO DIFFERNETIATE DIFFERENT HTML ELEMENTS

CLASSES VS IDs:

	1. To use an ID selector firstly specify the ID within the html tag as done with the classes, then use a #id-name and within the {} specify the
	   styling as:
		 <h1 id="heading">I Love Bacon</h1>

		 Then in external css section:
		 #heading {
			color: blue
		 }

NOTE*: 1. also the ID selectors and the class selectors, overrides the tag selectors as they are more specific, hence if both id and tag selectord
          are used then only the id selector will come to use.
			 2. TO CHECK WHICH SELECTOR WORKS FINE, CHECK IT IN THE CHROME DEVELOPER TOOLS BY RIGHT CLICKING AND INSPECTING IT.
			 3. When using IDs make sure that you can have only a single instance of id name in a single page, no two tags must have a same ID name,
			    but it doesn't really matter with the class attribute, so many classes can have and be called using the same name.
					there has to be only one id with a particular name but a webpage can have multiple id attributes.
			 4. Any html element can have more than one class but can only have one id as:
			 			<img class="bacon circular" src="link to bacon" alt="bacon-img">	
						note that here circular is another class whoch in the external css file can be used as another class as:
							.circular {
								border-radius: 100%;								
							}
					but if the same is done with an id then, since the id is now invalid, so all the styling under the id selector is denied.

WHEN TO USE A CLASS AND WHEN AN ID?
	Class: when you have to use the same kinda styling to a group of related items.
	IDs: when you have to use a specific style to a single element.

PSEUDO CLASSES:
	They have a :class before their respective classes, this is because the html elements can have different states and the most commonly used is 
	:hover-> in this when we roll over or hover over a particular piece of text or image a different style is shown such as, if we hover over an
	image it would change its background color. This is done using tag:hover {}

CSS DISPLAY PROPERTIES:
	1. block: covers entire line and blocks other text or elements to be displayed in the same line, width can be specified.
	2. inline: covers only the required amount of space but width cannot be specifed.
	3. inline-block: covers required amount of space and width can be specified too.
	4. none: gets rid of the element.

NOTE*: when using display: none; the element gets deleted as it were never written, but if we use visiblity: hidden; then the original positions
			 of all the other texts remains unchanged, it's just that the text with the specified  prop, is ni longer displayed and is changed with a
			 white space.
			 
Note that when using the <p> text </p>, it displays the website in the block format, i.e., it takes over the entire screen width on the webpage 
unlike the <img> which only uses the required space width so using span you can overcome this problem but you cannot specify width when using 
the <span> as in the <p> tag, so we can just change the display properties of the paragraph tag to inline or of the span element to block display
but we still cannot specify the property like width to either of them while them being inline elments.

	Common Block Elements:
		-> paragraphs <p>, headers<h1> to <h6>, divisions<div>, lists and  list items(<ol>, <ul> and <li>), forms <form>.
	<span> as well as anchor tag <a> are inline display element.


CSS POSITIONING:
	1. Content is Everything
		The font you use determines how large things are displayed and what height and width will be.
	2. Order Comes from code
		Whatever is coded first, gets displayed first.
	3. Children sit on top of Parents
		Parent element acts as a base on top of which things that are coded inside them gets displayed, i.e., more close to the viewer.
		Position is a CSS property which can be used to set the position or layout other than the default one. Some properties used to change the 
		layout are:
			1. Static: the default html flow, if we have only html and no css, these elements are not affected by any css positioning props.
			2. Relative: it also uses the stsic or normal position and that is used to determine the new relative position like left: 40px says the 
				 left edge of the element should move to the right by 40px or the space b/w its new and former left edge should be 40 px.
				 -> note that the relative positioning does not affect other elements so, if some other element is displayed along its new position, 
				 	  then the change will just overlap the other elements.
				 -> relative positioning adds the margin to where the object should have been
			3. Absolute: adds the margin to the parent element.
			4. Fixed: no matter of all the scrolling through the page, a particular element would remain still and intact in it's position.

Centering the Elements using CSS
	1. To center everything under the body tag which does not have a width set use text=align: center; and elements continue being in the block 
		 layout.
	2. If you have width set to a certain element, then using margin: 0 auto 0 auto; it can be aligned to the center and these elements no longer 
		 are dislayed in the block layout.(auto sets the element to center)

NOTE*: 16px IN FONT SIZE IS THE SAME AS 100% OR 1em.
			 If we specify the font size using the % or em in the body tag and also individually to an element then the size appearing in the website
			 gets added up, but if specified in pixels then only the one's given individually to the element works.
			 To avoid th efont- size adding up the em i replaced by rem or root em.

FLOAT TAG:
	Float tag allows us to make an element float to the specified direction to the upcoming element.
	.bun-img{float: left;}
		would make the bun-img float left and the coded text next would appear to the right, or gets wrapped up to the right of the floating element.
	If you want nothing to appear to left of the text then simply use the clear: left;(makes sure nothing is floating toward it's left)
	  and if some elemnt was being shown to the left, then the mentioned element shifts downwards with a clear left side.
NOTE*: Try to avoid using float prop. every now and then, or do not use it for positioning. Use only when necessary.